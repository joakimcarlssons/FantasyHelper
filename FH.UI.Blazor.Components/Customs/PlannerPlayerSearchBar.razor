<div class="planner-player-searchbar-wrapper">
    <div class="__search-input active">

        <!-- Input field -->
        <input type="text" placeholder="Type to search" 
            @bind="SearchInput" @oninput="((e) => InputFieldChanged(e?.Value?.ToString()))" 
            @onkeydown="(async (e) => await ScrollPlayerList(e))" />

        <!-- Search list -->
        <div class="__search-list" 
             style="@(FilteredPlayers?.Count > 0 ? "box-shadow: 0px 3px 3px rgba(0,0,0,.5);" : "" )"
             @onkeydown="((e) => ScrollPlayerList(e))">

            @foreach (var player in FilteredPlayers)
            {
                <span class="search-list__player @(FilteredPlayers?.IndexOf(player) == CurrentHoveredPlayerIndex ? "selected": "")"
                      @onclick="(async () => await SelectPlayer(player))"
                      @onmouseover="((e) => OnPlayerListHover(e, FilteredPlayers.IndexOf(player)))">
                    @player.FullName
                </span>
            }
        </div>

        <!-- Fixture -->
        @if (SelectedPlayer?.Fixtures?.Where(f => f.GameweekId == Gameweek).Skip(1).Any() ?? false) // If the player has multiple fixtures in the gameweek
        {
            <CustomTooltip>
                <MainContent>
                    <div class="search-input__fixture">
                        <div class="__fixture__dbgw-fixture-container">
                            <span>DBGW</span>
                        </div>
                    </div>
                </MainContent>
                <TooltipContent>
                    dubbel
                </TooltipContent>
            </CustomTooltip>
        }
        else if (SelectedPlayer?.Fixtures?.Where(f => f.GameweekId == Gameweek).Any() ?? false) // If the player has a fixture in the gameweek
        {
            <div class="search-input__fixture">
                <FixtureDisplay TeamId="SelectedPlayer.Team.TeamId" NextGameweek="Gameweek" Fixtures="SelectedPlayerFixtures" />
            </div>
        }

    </div>
</div>
