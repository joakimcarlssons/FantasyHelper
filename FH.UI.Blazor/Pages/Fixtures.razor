@page "/fixtures"
@using FH.UI.Blazor.Components.Fixtures;

<div class="fixtures-wrapper">
    @if (Teams == null)
    {
        <p>Loading fixtures...</p>
    }
    else
    {

        <div class="team__fixtures-wrapper">
            <span>
                <i class="fa-solid fa-circle-chevron-left" @onclick="DecreaseGameweek"></i>
            </span>
            <div class="team__fixtures">
                @for (int i = (MinGameweek == 0 ? NextGameweek : MinGameweek); i <= (MinGameweek == 0 ? NextGameweek : MinGameweek) + GameweeksToDisplay; i++)
                {
                    <FixtureDisplay GameweekNumber="i" />
                }
            </div>
            <span>
                <i class="fa-solid fa-circle-chevron-right" @onclick="IncreaseGameweek"></i>
            </span>
        </div>

        @foreach (var model in TeamFixtures.Where(f => f.Fixtures.Where(ff => ff.Count > 0).Any()))
        {
            <div class="team__fixtures-wrapper">
                <p class="team-name" @onclick="(() => DisplayTeamDetails(model.Team))">@model.Team.Name</p>

                <div class="team__fixtures">
                    @for (int i = (MinGameweek == 0 ? NextGameweek : MinGameweek); i <= (MinGameweek == 0 ? NextGameweek : MinGameweek) + GameweeksToDisplay; i++)
                    {
                        <FixtureDisplay TeamId="model.Team.TeamId" Fixtures="model.Fixtures.FirstOrDefault(f => f.Any(ff => ff.GameweekId == i))?.ToList()" />
                    }
                </div>
            </div>
        }
    }

</div>

<ModalDialog IsVisible="@OpenTeamDetails">
    <ModalContent>
        <TeamDetailsModal 
            Team="TeamToDisplay" 
            TeamFixtures="TeamFixtures.FirstOrDefault(tf => tf.Team == TeamToDisplay)?.Fixtures.SelectMany(f => f.Select(fixture => fixture)).ToList()"
            NextGameweek="NextGameweek"
            />
    </ModalContent>
</ModalDialog>
